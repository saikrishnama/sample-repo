{
  "datasets": [
    {
      "name": "e4f42c2a",
      "displayName": "general - active clusters by source",
      "queryLines": [
        "-- Count of active clusters by cluster_source\n",
        "\n",
        "SELECT\n",
        "  cluster_source,\n",
        "  COUNT(*) AS active_clusters\n",
        "FROM\n",
        "  system.compute.clusters\n",
        "WHERE\n",
        "  delete_time IS NULL\n",
        "GROUP BY\n",
        "  cluster_source\n",
        "ORDER BY\n",
        "  cluster_source;\n"
      ]
    },
    {
      "name": "e5e51159",
      "displayName": "general - active clusters by availability",
      "queryLines": [
        "-- Count of active clusters by availability\n",
        "\n",
        "SELECT\n",
        "  \"AWS\" AS cloud,\n",
        "  aws_attributes.availability AS availability,\n",
        "  COUNT(*) AS active_clusters\n",
        "FROM\n",
        "  system.compute.clusters\n",
        "WHERE\n",
        "  delete_time IS NULL\n",
        "  AND aws_attributes.availability IS NOT NULL\n",
        "GROUP BY\n",
        "  aws_attributes.availability\n",
        "UNION ALL\n",
        "SELECT\n",
        "  \"AZURE\" AS cloud,\n",
        "  azure_attributes.availability AS availability,\n",
        "  COUNT(*) AS active_clusters\n",
        "FROM\n",
        "  system.compute.clusters\n",
        "WHERE\n",
        "  delete_time IS NULL\n",
        "  AND azure_attributes.availability IS NOT NULL\n",
        "GROUP BY\n",
        "  azure_attributes.availability\n",
        "UNION ALL\n",
        "SELECT\n",
        "  \"GCP\" AS cloud,\n",
        "  gcp_attributes.availability AS availability,\n",
        "  COUNT(*) AS active_clusters\n",
        "FROM\n",
        "  system.compute.clusters\n",
        "WHERE\n",
        "  delete_time IS NULL\n",
        "  AND gcp_attributes.availability IS NOT NULL\n",
        "GROUP BY\n",
        "  gcp_attributes.availability;\n"
      ]
    },
    {
      "name": "f38fd30d",
      "displayName": "general - queries by user",
      "queryLines": [
        "-- Count of queries executed by user\n",
        "\n",
        "SELECT\n",
        "  executed_by AS user,\n",
        "  COUNT(*) AS query_count\n",
        "FROM\n",
        "  system.query.history\n",
        "GROUP BY\n",
        "  executed_by\n",
        "ORDER BY\n",
        "  query_count DESC\n",
        "LIMIT 10;\n"
      ]
    },
    {
      "name": "68bc7ee0",
      "displayName": "general - workspace stickiness",
      "queryLines": [
        "WITH all_users AS (\n",
        "  SELECT\n",
        "    DATE(DATE_TRUNC('month', start_time)) AS usage_month,\n",
        "    DATE(start_time) AS usage_date,\n",
        "    executed_by\n",
        "  FROM\n",
        "    system.query.history\n",
        "  WHERE\n",
        "    start_time >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL 6 MONTH\n",
        "),\n",
        "distinct_users AS (\n",
        "  SELECT\n",
        "    DISTINCT executed_by\n",
        "  FROM\n",
        "    all_users\n",
        "),\n",
        "distinct_daily_users AS (\n",
        "  SELECT\n",
        "    DISTINCT usage_month,\n",
        "    usage_date,\n",
        "    executed_by\n",
        "  FROM\n",
        "    all_users\n",
        "),\n",
        "distinct_monthly_users AS (\n",
        "  SELECT\n",
        "    DISTINCT usage_month,\n",
        "    executed_by\n",
        "  FROM\n",
        "    all_users\n",
        "),\n",
        "daily_active_users AS (\n",
        "  SELECT\n",
        "    DISTINCT usage_month,\n",
        "    usage_date,\n",
        "    COUNT(executed_by) OVER (PARTITION BY DATE(usage_month), DATE(usage_date)) AS dau\n",
        "  FROM\n",
        "    distinct_daily_users\n",
        "),\n",
        "monthly_active_users AS (\n",
        "  SELECT\n",
        "    DISTINCT usage_month,\n",
        "    COUNT(executed_by) OVER (PARTITION BY DATE(usage_month)) AS mau\n",
        "  FROM\n",
        "    distinct_monthly_users\n",
        "),\n",
        "stickiness AS (\n",
        "  SELECT\n",
        "    dau.usage_month,\n",
        "    ROUND(\n",
        "      AVG(dau.dau) OVER (PARTITION BY DATE(dau.usage_month)),\n",
        "      2\n",
        "    ) AS avg_dau,\n",
        "    mau.mau,\n",
        "    ROUND(\n",
        "      AVG(dau.dau) OVER (PARTITION BY DATE(dau.usage_month)) / mau.mau,\n",
        "      2\n",
        "    ) AS stickiness\n",
        "  FROM\n",
        "    daily_active_users dau\n",
        "    JOIN monthly_active_users mau ON dau.usage_month = mau.usage_month\n",
        "),\n",
        "total_users AS (\n",
        "  SELECT\n",
        "    DISTINCT COUNT(executed_by) OVER () AS total_users\n",
        "  FROM\n",
        "    distinct_users\n",
        "),\n",
        "final AS (\n",
        "  SELECT\n",
        "    DISTINCT usage_month,\n",
        "    (\n",
        "      SELECT\n",
        "        total_users\n",
        "      FROM\n",
        "        total_users\n",
        "      LIMIT\n",
        "        1\n",
        "    ) AS total_users,\n",
        "    mau,\n",
        "    avg_dau,\n",
        "    stickiness\n",
        "  FROM\n",
        "    stickiness\n",
        "  ORDER BY\n",
        "    usage_month\n",
        ")\n",
        "SELECT\n",
        "  *\n",
        "FROM\n",
        "  final;\n"
      ]
    },
    {
      "name": "6d43323f",
      "displayName": "perf_insights - jobs by dbu",
      "queryLines": [
        "-- Jobs that have consumed the most DBUs\n",
        "\n",
        "SELECT\n",
        "  bu.usage_metadata.job_id AS job_id,\n",
        "  SUM(bu.usage_quantity) AS total_usage\n",
        "FROM\n",
        "  system.billing.usage bu\n",
        "WHERE\n",
        "  bu.usage_metadata.job_id IS NOT NULL\n",
        "  AND\n",
        "  bu.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "GROUP BY\n",
        "  job_id\n",
        "ORDER BY\n",
        "  total_usage DESC\n",
        "LIMIT 10;\n"
      ]
    },
    {
      "name": "7e79d18d",
      "displayName": "perf_insights - notebooks by dbu",
      "queryLines": [
        "-- Notebooks that have consumed the most DBUs\n",
        "\n",
        "SELECT\n",
        "  usage_metadata.notebook_id AS notebook_id,\n",
        "  usage_metadata.notebook_path AS notebook_path,\n",
        "  SUM(usage_quantity) AS total_usage\n",
        "FROM\n",
        "  system.billing.usage\n",
        "WHERE\n",
        "  usage_metadata.notebook_id IS NOT NULL\n",
        "GROUP BY\n",
        "  notebook_id,\n",
        "  notebook_path\n",
        "ORDER BY\n",
        "  total_usage DESC\n",
        "LIMIT 10;\n"
      ]
    },
    {
      "name": "45200836",
      "displayName": "perf_insights - longest running queries",
      "queryLines": [
        "-- Slowest queries based upon total duration\n",
        "\n",
        "SELECT\n",
        "  statement_id,\n",
        "  executed_by,\n",
        "  statement_text,\n",
        "  total_duration_ms,\n",
        "  execution_duration_ms,\n",
        "  compilation_duration_ms,\n",
        "  waiting_for_compute_duration_ms,\n",
        "  waiting_at_capacity_duration_ms,\n",
        "  start_time,\n",
        "  end_time\n",
        "FROM\n",
        "  system.query.history\n",
        "ORDER BY\n",
        "  total_duration_ms DESC\n",
        "LIMIT 10;\n"
      ]
    },
    {
      "name": "72a46672",
      "displayName": "cost_optimization - total costs by sku",
      "queryLines": [
        "-- Total costs by SKU\n",
        "\n",
        "SELECT\n",
        "  t1.sku_name,\n",
        "  SUM(t1.usage_quantity * lp.pricing.default) AS total_cost\n",
        "FROM\n",
        "  system.billing.usage t1\n",
        "  INNER JOIN system.billing.list_prices lp ON t1.cloud = lp.cloud\n",
        "  AND t1.sku_name = lp.sku_name\n",
        "  AND t1.usage_start_time >= lp.price_start_time\n",
        "  AND (\n",
        "    t1.usage_end_time <= lp.price_end_time\n",
        "    OR lp.price_end_time IS NULL\n",
        "  )\n",
        "WHERE\n",
        "  t1.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "GROUP BY\n",
        "  t1.sku_name\n",
        "ORDER BY\n",
        "  total_cost DESC;\n"
      ]
    },
    {
      "name": "7e098825",
      "displayName": "cost_optimization - total costs by product",
      "queryLines": [
        "-- Total costs by product\n",
        "\n",
        "WITH usage AS (\n",
        "  SELECT\n",
        "    bu.usage_metadata.job_id,\n",
        "    bu.usage_metadata.cluster_id,\n",
        "    bu.usage_metadata.warehouse_id,\n",
        "    bu.billing_origin_product,\n",
        "    bu.usage_quantity,\n",
        "    bu.usage_start_time,\n",
        "    bu.usage_end_time,\n",
        "    bu.cloud,\n",
        "    bu.sku_name\n",
        "  FROM\n",
        "    system.billing.usage bu\n",
        "),\n",
        "list_prices AS (\n",
        "  SELECT\n",
        "    lp.pricing.default AS price,\n",
        "    lp.cloud,\n",
        "    lp.price_start_time,\n",
        "    lp.price_end_time,\n",
        "    lp.sku_name\n",
        "  FROM\n",
        "    system.billing.list_prices lp\n",
        "),\n",
        "joined AS (\n",
        "  SELECT\n",
        "    u.billing_origin_product,\n",
        "    u.usage_start_time,\n",
        "    SUM(u.usage_quantity * lp.price) OVER (PARTITION BY u.billing_origin_product) AS total_cost\n",
        "  FROM\n",
        "    usage u\n",
        "    INNER JOIN list_prices lp ON u.cloud = lp.cloud\n",
        "    AND u.sku_name = lp.sku_name\n",
        "    AND u.usage_start_time >= lp.price_start_time\n",
        "    AND (\n",
        "      u.usage_end_time <= lp.price_end_time\n",
        "      OR lp.price_end_time IS NULL\n",
        "    )\n",
        ")\n",
        "SELECT\n",
        "  DISTINCT billing_origin_product,\n",
        "  total_cost\n",
        "FROM\n",
        "  joined\n",
        "WHERE\n",
        "  usage_start_time >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "ORDER BY\n",
        "  total_cost DESC;"
      ]
    },
    {
      "name": "d6266ff6",
      "displayName": "cost_optimization - low cpu utilization",
      "queryLines": [
        "with list_cost_per_job_cluster as (\n",
        " SELECT\n",
        "   t1.workspace_id,\n",
        "   t1.usage_metadata.job_id,\n",
        "   t1.usage_metadata.cluster_id,\n",
        "   COUNT(DISTINCT t1.usage_metadata.job_run_id) as runs,\n",
        "   SUM(t1.usage_quantity * list_prices.pricing.default) as list_cost,\n",
        "   first(identity_metadata.run_as, true) as run_as,\n",
        "   first(t1.custom_tags, true) as custom_tags,\n",
        "   MAX(t1.usage_end_time) as last_seen_date\n",
        " FROM system.billing.usage t1\n",
        " INNER JOIN system.billing.list_prices list_prices on\n",
        "   t1.cloud = list_prices.cloud and\n",
        "   t1.sku_name = list_prices.sku_name and\n",
        "   t1.usage_start_time >= list_prices.price_start_time and\n",
        "   (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is null)\n",
        " WHERE\n",
        "   t1.sku_name LIKE '%JOBS%'\n",
        " and t1.sku_name not ilike '%jobs_serverless%'\n",
        "   AND t1.usage_metadata.job_id IS NOT NULL\n",
        "   AND t1.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        " GROUP BY ALL\n",
        "),\n",
        "most_recent_jobs as (\n",
        " SELECT\n",
        "   *,\n",
        "   ROW_NUMBER() OVER(PARTITION BY workspace_id, job_id ORDER BY change_time DESC) as rn\n",
        " FROM\n",
        "   system.lakeflow.jobs QUALIFY rn=1\n",
        "),\n",
        "\n",
        "\n",
        "jobsrollingmonth as (\n",
        "SELECT\n",
        "   t2.name,\n",
        "   t1.job_id,\n",
        "   t1.workspace_id,\n",
        "   t1.cluster_id,\n",
        "   t1.runs,\n",
        "   t1.run_as,\n",
        "   SUM(list_cost) as list_cost,\n",
        "   t1.last_seen_date\n",
        "FROM list_cost_per_job_cluster t1\n",
        " LEFT JOIN most_recent_jobs t2 USING (workspace_id, job_id)\n",
        "GROUP BY ALL\n",
        "ORDER BY list_cost DESC ),\n",
        "\n",
        "\n",
        "clusterutil as (SELECT * from\n",
        " system.compute.node_timeline\n",
        "WHERE\n",
        " start_time >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "),\n",
        "\n",
        "\n",
        "jobswithutil as (\n",
        "select jobsrollingmonth.workspace_id, jobsrollingmonth.name,\n",
        "avg(cpu_user_percent + cpu_system_percent) as `Avg CPU Utilization`,\n",
        "max(cpu_user_percent + cpu_system_percent) as `Peak CPU Utilization`,\n",
        " avg(cpu_wait_percent) as `Avg CPU Disk Wait`,\n",
        " max(cpu_wait_percent) as `Max CPU Disk Wait`,\n",
        " avg(mem_used_percent) as `Avg Memory Utilization`,\n",
        " max(mem_used_percent) as `Max Memory Utilization`\n",
        "from clusterutil\n",
        "join jobsrollingmonth\n",
        "on clusterutil.cluster_id = jobsrollingmonth.cluster_id\n",
        "group by 1, 2)\n",
        "\n",
        "\n",
        "select *\n",
        "from jobswithutil\n",
        "order by `Avg CPU Utilization` asc\n",
        "limit 10;"
      ]
    },
    {
      "name": "68c381bc",
      "displayName": "cost_optimization - most expensive jobs over 30 days",
      "queryLines": [
        "with list_cost_per_job as (\n",
        " SELECT\n",
        "   t1.workspace_id,\n",
        "   t1.usage_metadata.job_id,\n",
        "   COUNT(DISTINCT t1.usage_metadata.job_run_id) as runs,\n",
        "   SUM(t1.usage_quantity * list_prices.pricing.default) as list_cost,\n",
        "   first(identity_metadata.run_as, true) as run_as,\n",
        "   first(t1.custom_tags, true) as custom_tags,\n",
        "   MAX(t1.usage_end_time) as last_seen_date\n",
        " FROM system.billing.usage t1\n",
        " INNER JOIN system.billing.list_prices list_prices on\n",
        "   t1.cloud = list_prices.cloud and\n",
        "   t1.sku_name = list_prices.sku_name and\n",
        "   t1.usage_start_time >= list_prices.price_start_time and\n",
        "   (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is null)\n",
        " WHERE\n",
        "   t1.sku_name LIKE '%JOBS%'\n",
        "   AND t1.usage_metadata.job_id IS NOT NULL\n",
        "   AND t1.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        " GROUP BY ALL\n",
        "),\n",
        "most_recent_jobs as (\n",
        " SELECT\n",
        "   *,\n",
        "   ROW_NUMBER() OVER(PARTITION BY workspace_id, job_id ORDER BY change_time DESC) as rn\n",
        " FROM\n",
        "   system.lakeflow.jobs QUALIFY rn=1\n",
        ")\n",
        "SELECT\n",
        "   t2.name,\n",
        "   t1.job_id,\n",
        "   t1.workspace_id,\n",
        "   t1.runs,\n",
        "   t1.run_as,\n",
        "   SUM(list_cost) as list_cost,\n",
        "   t1.last_seen_date\n",
        "FROM list_cost_per_job t1\n",
        " LEFT JOIN most_recent_jobs t2 USING (workspace_id, job_id)\n",
        "GROUP BY ALL\n",
        "ORDER BY list_cost DESC\n",
        "LIMIT 20"
      ]
    },
    {
      "name": "9abef65c",
      "displayName": "cost_optimization - high mem utilization",
      "queryLines": [
        "with list_cost_per_job_cluster as (\n",
        "  SELECT\n",
        "    t1.workspace_id,\n",
        "    t1.usage_metadata.job_id,\n",
        "    t1.usage_metadata.cluster_id,\n",
        "    COUNT(DISTINCT t1.usage_metadata.job_run_id) as runs,\n",
        "    SUM(t1.usage_quantity * list_prices.pricing.default) as list_cost,\n",
        "    first(identity_metadata.run_as, true) as run_as,\n",
        "    first(t1.custom_tags, true) as custom_tags,\n",
        "    MAX(t1.usage_end_time) as last_seen_date\n",
        "  FROM system.billing.usage t1 \n",
        "  INNER JOIN system.billing.list_prices list_prices on\n",
        "    t1.cloud = list_prices.cloud and\n",
        "    t1.sku_name = list_prices.sku_name and\n",
        "    t1.usage_start_time >= list_prices.price_start_time and\n",
        "    (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is null)\n",
        "  WHERE\n",
        "    t1.sku_name LIKE '%JOBS%'\n",
        "\tand t1.sku_name not ilike '%jobs_serverless%'\n",
        "    AND t1.usage_metadata.job_id IS NOT NULL\n",
        "    AND t1.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY \n",
        "  GROUP BY ALL\n",
        "),\n",
        "most_recent_jobs as (\n",
        "  SELECT \n",
        "    *, \n",
        "    ROW_NUMBER() OVER(PARTITION BY workspace_id, job_id ORDER BY change_time DESC) as rn\n",
        "  FROM\n",
        "    system.lakeflow.jobs QUALIFY rn=1\n",
        "),\n",
        "\n",
        "jobsrollingmonth as (\n",
        "SELECT \n",
        "    t2.name,\n",
        "    t1.job_id,\n",
        "    t1.workspace_id,\n",
        "    t1.cluster_id,\n",
        "    t1.runs,\n",
        "    t1.run_as,\n",
        "    SUM(list_cost) as list_cost,\n",
        "    t1.last_seen_date\n",
        "FROM list_cost_per_job_cluster t1 \n",
        "  LEFT JOIN most_recent_jobs t2 USING (workspace_id, job_id)\n",
        "GROUP BY ALL\n",
        "ORDER BY list_cost DESC ),\n",
        "\n",
        "clusterutil as (SELECT * from \n",
        "\tsystem.compute.node_timeline\n",
        "WHERE\n",
        "\tstart_time >= CURRENT_DATE() - INTERVAL 30 DAY \n",
        "),\n",
        "\n",
        "jobswithutil as (\n",
        "select jobsrollingmonth.workspace_id, jobsrollingmonth.name,\n",
        "avg(cpu_user_percent + cpu_system_percent) as `Avg CPU Utilization`, \n",
        "max(cpu_user_percent + cpu_system_percent) as `Peak CPU Utilization`, \n",
        "\tavg(cpu_wait_percent) as `Avg CPU Disk Wait`,\n",
        "\tmax(cpu_wait_percent) as `Max CPU Disk Wait`,\n",
        "\tavg(mem_used_percent) as `Avg Memory Utilization`, \n",
        "\tmax(mem_used_percent) as `Max Memory Utilization`\n",
        "from clusterutil \n",
        "join jobsrollingmonth\n",
        "on clusterutil.cluster_id = jobsrollingmonth.cluster_id\n",
        "group by 1, 2)\n",
        "\n",
        "select *\n",
        "from jobswithutil\n",
        "order by `Avg Memory Utilization` desc\n",
        "limit 20;"
      ]
    },
    {
      "name": "ecc3724f",
      "displayName": "dnw_management - sources by jobs",
      "queryLines": [
        "-- Most Used Data Sources by Jobs\n",
        "\n",
        "SELECT\n",
        "  coalesce(source_table_full_name, source_path) source,\n",
        "  count(distinct entity_id) distinct_jobs\n",
        "from\n",
        "  system.access.table_lineage\n",
        "where\n",
        "  entity_type = 'JOB'\n",
        "  and coalesce(source_table_full_name, source_path) is not null\n",
        "group by\n",
        "  1\n",
        "order by\n",
        "  2 desc\n",
        "limit 10;"
      ]
    },
    {
      "name": "755e0e62",
      "displayName": "dnw_management - data lineage",
      "queryLines": [
        "-- Data Lineage (Table Sources)\n",
        "\n",
        "SELECT\n",
        "  distinct target_table_full_name target,\n",
        "  coalesce(source_table_full_name, source_path) source\n",
        "from\n",
        "  system.access.table_lineage\n",
        "where\n",
        "  entity_type = 'JOB'\n",
        "  and coalesce(source_table_full_name, source_path) is not null\n",
        "  and target_table_full_name is not null\n",
        "order by\n",
        "  1 asc;"
      ]
    },
    {
      "name": "2cc9e4d7",
      "displayName": "Warehouses Current",
      "queryLines": [
        "\n",
        "\n",
        "WITH with_delete_flag AS (\n",
        "    SELECT * ,\n",
        "    CASE WHEN delete_time IS NOT NULL THEN 'Deleted' ELSE 'Active' END AS IsDeletedCurrently\n",
        "    FROM system.compute.warehouses\n",
        "    QUALIFY ROW_NUMBER() OVER(PARTITION BY account_id, workspace_id, warehouse_id ORDER BY change_time DESC) = 1\n",
        "),\n",
        "\n",
        "px_all AS (\n",
        "    SELECT DISTINCT\n",
        "        sku_name,\n",
        "        pricing.default AS unit_price,\n",
        "        CAST(unit_price AS DECIMAL(10,3)) AS sku_price\n",
        "    FROM system.billing.list_prices \n",
        "    QUALIFY ROW_NUMBER() OVER (PARTITION BY sku_name ORDER BY price_start_time DESC) = 1\n",
        "),\n",
        "\n",
        "-- Active Warehouse Metadata\n",
        "clean_usage AS (\n",
        "    SELECT \n",
        "        w.*,\n",
        "        usage_date, \n",
        "        usage_quantity AS DBUs,\n",
        "        (CAST(px.sku_price AS FLOAT) * (1 - CAST(:dbsql_discount AS FLOAT)) * usage_quantity) AS UsageDollars,\n",
        "        custom_tags\n",
        "    FROM main.dbsql_warehouse_advisor.warehouse_usage AS u\n",
        "    INNER JOIN px_all AS px \n",
        "        ON px.sku_name = u.sku_name\n",
        "    INNER JOIN with_delete_flag AS w \n",
        "        ON usage_metadata.warehouse_id = w.warehouse_id\n",
        "    WHERE warehouse_name IS NOT NULL\n",
        "    AND usage_date BETWEEN CAST(:start_date AS TIMESTAMP) AND CAST(:end_date AS TIMESTAMP)\n",
        "),\n",
        "\n",
        "warehouse_ranks AS (\n",
        "    SELECT \n",
        "        account_id, \n",
        "        workspace_id, \n",
        "        warehouse_id,\n",
        "        SUM(UsageDollars) AS total_warehouse_usage_in_period,\n",
        "        DENSE_RANK() OVER (ORDER BY SUM(UsageDollars) DESC) AS WarehouseUsageTopNRank\n",
        "    FROM clean_usage\n",
        "    GROUP BY account_id, workspace_id, warehouse_id\n",
        "),\n",
        "\n",
        "-- eval tags param\n",
        "tag_entry_parsing as (\n",
        "  select\n",
        "    explode(split(\n",
        "    :param_tag_entries,\n",
        "      ';'\n",
        "    )) as tag_entry,\n",
        "    contains(tag_entry, '=') as is_filter,\n",
        "    if(is_filter, split(tag_entry, '=')[0], tag_entry) as tag_key,\n",
        "    monotonically_increasing_id() + 1 AS tag_id\n",
        "),\n",
        "\n",
        "exploded_usage_tags_to_compare AS (\n",
        "    SELECT DISTINCT\n",
        "    warehouse_id,\n",
        "    workspace_id,\n",
        "    account_id,\n",
        "    explode(tags)\n",
        "    FROM system.compute.warehouses AS u\n",
        "),\n",
        "\n",
        "matched_records AS (SELECT account_id, workspace_id, warehouse_id,\n",
        "       -- array of maps that match\n",
        "      array_agg(CASE WHEN tag_id IS NOT NULL THEN concat(spine.key, '=', spine.value) END) AS matched_tags_array,\n",
        "      array_agg(concat(spine.key, '=', spine.value)) AS usage_tags_array,\n",
        "      size(matched_tags_array) AS matched_tag_count,\n",
        "      (SELECT COUNT (0) FROM tag_entry_parsing WHERE length(tag_entry) > 0) AS search_tag_count,\n",
        "      if(search_tag_count = 0 OR search_tag_count = size(matched_tags_array),\n",
        "      array_join(matched_tags_array, ';'), ''\n",
        "        )  as _custom_tag_key_value_pairs,\n",
        "      coalesce(if(_custom_tag_key_value_pairs = \"\", \"<MISMATCH>\", _custom_tag_key_value_pairs), '<UNTAGGED>') as custom_tag_key_value_pairs,\n",
        "       -- Is match yes/no\n",
        "       if(search_tag_count = 0 OR search_tag_count <= size(matched_tags_array), '<MATCHED>', '<MISMATCH>') AS IsMatched\n",
        "FROM exploded_usage_tags_to_compare AS spine\n",
        "LEFT JOIN (SELECT * FROM tag_entry_parsing WHERE length(tag_entry) > 0) AS tt ON\n",
        "    (CASE WHEN :case_sensitive = 'No'\n",
        "    THEN \n",
        "        (-- Join on Key only if is_filter = false\n",
        "        (trim(lower(tt.tag_key)) = trim(lower(spine.key)) AND tt.is_filter = false)\n",
        "        OR \n",
        "        (trim(lower(tt.tag_entry)) = concat(trim(lower(spine.key)), '=', trim(lower(spine.value))) AND tt.is_filter = true)\n",
        "        )\n",
        "    ELSE \n",
        "    (-- Join on Key only if is_filter = true\n",
        "        (tt.tag_key = spine.key AND tt.is_filter = false)\n",
        "        OR \n",
        "        (tt.tag_entry = concat(spine.key, '=', spine.value) AND tt.is_filter = true)\n",
        "        )\n",
        "    END )\n",
        "GROUP BY account_id, workspace_id, warehouse_id\n",
        ")\n",
        "\n",
        "\n",
        "SELECT \n",
        "    u.*,\n",
        "    CONCAT('/sql/warehouses/', u.warehouse_id) AS url_helper,\n",
        "    r.WarehouseUsageTopNRank,\n",
        "coalesce(m.custom_tag_key_value_pairs, '<UNTAGGED>') AS custom_tag_key_value_pairs\n",
        "FROM clean_usage AS u \n",
        "INNER JOIN warehouse_ranks AS r \n",
        "    ON u.warehouse_id = r.warehouse_id \n",
        "    AND u.account_id = r.account_id \n",
        "    AND u.workspace_id = r.workspace_id\n",
        "LEFT JOIN matched_records m ON \n",
        "    u.account_id = m.account_id\n",
        "    AND u.workspace_id = m.workspace_id\n",
        "    AND u.warehouse_id = m.warehouse_id\n",
        "WHERE \n",
        "    CASE WHEN :filter_by_tag_match = 'Yes' THEN (:param_tag_entries = '<ALL>' OR m.IsMatched = '<MATCHED>') ELSE 1=1 END\n",
        "LIMIT 20"
      ],
      "parameters": [
        {
          "displayName": "dbsql_discount",
          "keyword": "dbsql_discount",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [
                {
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "displayName": "start_date",
          "keyword": "start_date",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [
                {
                  "value": "now-30d/d"
                }
              ]
            }
          }
        },
        {
          "displayName": "end_date",
          "keyword": "end_date",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [
                {
                  "value": "now/s"
                }
              ]
            }
          }
        },
        {
          "displayName": "param_tag_entries",
          "keyword": "param_tag_entries",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [
                {
                  "value": "<ALL>"
                }
              ]
            }
          }
        },
        {
          "displayName": "case_sensitive",
          "keyword": "case_sensitive",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [
                {
                  "value": "no"
                }
              ]
            }
          }
        },
        {
          "displayName": "filter_by_tag_match",
          "keyword": "filter_by_tag_match",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [
                {
                  "value": "no"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "b5c31914",
      "displayName": "Query Costs",
      "queryLines": [
        "-- Run for ALL warehouses\n",
        "WITH warehouse_snapshot AS (\n",
        "    SELECT *\n",
        "    FROM system.compute.warehouses\n",
        "    QUALIFY ROW_NUMBER() OVER(PARTITION BY account_id, workspace_id, warehouse_id ORDER BY change_time DESC) = 1\n",
        "),\n",
        "\n",
        "px_all AS (\n",
        "    SELECT DISTINCT\n",
        "        sku_name,\n",
        "        pricing.default AS unit_price,\n",
        "        CAST(unit_price AS DECIMAL(10,3)) AS sku_price\n",
        "    FROM system.billing.list_prices \n",
        "    QUALIFY ROW_NUMBER() OVER (PARTITION BY sku_name ORDER BY price_start_time DESC) = 1\n",
        "),\n",
        "\n",
        "raw_history AS (\n",
        "    SELECT * \n",
        "    FROM main.dbsql_warehouse_advisor.warehouse_query_history f\n",
        "    WHERE \n",
        "    f.warehouse_id IN  (\n",
        "            SELECT DISTINCT warehouse_id FROM warehouse_snapshot\n",
        "        )\n",
        "    AND start_time >= CAST(:start_time AS TIMESTAMP) \n",
        "    AND end_time <= CAST(:end_time AS TIMESTAMP) \n",
        "    AND QueryWork > 0 -- This is how query cost is defined\n",
        "    AND statement_type IS NOT NULL\n",
        "),\n",
        "\n",
        "warehouse_time as (\n",
        "  select\n",
        "    warehouse_id,\n",
        "         SUM(COALESCE(TotalResourceTimeUsedForAllocationWithMetadata, 0))\n",
        "         as TotalUsedTimeInWarehouse\n",
        "  from\n",
        "    raw_history\n",
        "  group by\n",
        "    warehouse_id\n",
        "),\n",
        "\n",
        "history AS (\n",
        "  SELECT\n",
        "    a.*,\n",
        "    b.TotalUsedTimeInWarehouse,\n",
        "         SUM(COALESCE(TotalResourceTimeUsedForAllocationWithMetadata, 0)) OVER (PARTITION BY statement_text)\n",
        "        AS TotalStatementTextTimeUsed,\n",
        "\n",
        "        CASE \n",
        "            WHEN TotalUsedTimeInWarehouse = 0 THEN NULL \n",
        "            ELSE TotalResourceTimeUsedForAllocation / TotalUsedTimeInWarehouse \n",
        "        END AS ProportionOfWarehouseTimeUsedByQuery\n",
        "  FROM\n",
        "    raw_history a\n",
        "    inner join warehouse_time b on a.warehouse_id = b.warehouse_id\n",
        "),\n",
        "-- Partition cost allocation by warehouse so you can look at multiple warehouses at once\n",
        "\n",
        "filtered_warehouse_usage AS (\n",
        "    WITH trimmed_usage AS (\n",
        "        SELECT \n",
        "            TIMESTAMPDIFF(SECOND, usage_start_time, CAST(:start_time AS TIMESTAMP)) AS seconds_before_start_range,\n",
        "            TIMESTAMPDIFF(SECOND, usage_start_time, usage_end_time) AS full_start_range_length,\n",
        "            full_start_range_length - seconds_before_start_range AS seconds_remaining_in_original_start_range,\n",
        "            GREATEST(CAST(:start_time AS TIMESTAMP), usage_start_time) AS trimmed_start_time,\n",
        "            LEAST(CAST(:end_time AS TIMESTAMP), usage_end_time) AS trimmed_end_time,\n",
        "            TIMESTAMPDIFF(SECOND, CAST(:end_time AS TIMESTAMP), usage_end_time) AS seconds_after_end_range,\n",
        "            TIMESTAMPDIFF(SECOND, usage_start_time, usage_end_time) AS full_end_range_length,\n",
        "            full_end_range_length - seconds_after_end_range AS seconds_remaining_in_original_end_range,\n",
        "\n",
        "            CASE \n",
        "                WHEN seconds_before_start_range > 0 \n",
        "                THEN COALESCE((full_start_range_length - seconds_before_start_range) / full_start_range_length, 0) \n",
        "                ELSE NULL \n",
        "            END AS StartTrimProportion,\n",
        "            CASE \n",
        "                WHEN seconds_after_end_range > 0 \n",
        "                THEN COALESCE((full_start_range_length - seconds_after_end_range) / full_start_range_length, 0) \n",
        "                ELSE NULL \n",
        "            END AS EndTrimProportion,\n",
        "            COALESCE(EndTrimProportion, StartTrimProportion, 1) AS TrimProportion,\n",
        "            u.usage_start_time,\n",
        "            u.usage_end_time,\n",
        "            u.usage_quantity AS dbus,\n",
        "            u.warehouse_id AS warehouse_id,\n",
        "            (CAST(px.sku_price AS FLOAT) * (1 - CAST(:dbsql_discount AS FLOAT)) * dbus) AS UsageDollars\n",
        "        FROM main.dbsql_warehouse_advisor.warehouse_usage AS u\n",
        "        INNER JOIN px_all AS px \n",
        "            ON px.sku_name = u.sku_name\n",
        "        WHERE \n",
        "            usage_unit = 'DBU'\n",
        "            AND (\n",
        "                usage_start_time BETWEEN CAST(:start_time AS TIMESTAMP) AND CAST(:end_time AS TIMESTAMP)\n",
        "                OR usage_end_time BETWEEN CAST(:start_time AS TIMESTAMP) AND CAST(:end_time AS TIMESTAMP)\n",
        "            )\n",
        "    )\n",
        "    SELECT \n",
        "        u. warehouse_id,\n",
        "        SUM(u.dbus * TrimProportion) AS Total_Warehouse_Period_DBUs,\n",
        "        SUM(u.UsageDollars * TrimProportion) AS Total_Warehouse_Period_Dollars\n",
        "        -- Insert idle proportion here?\n",
        "    FROM trimmed_usage AS u\n",
        "    GROUP BY warehouse_id\n",
        "),\n",
        "\n",
        "history_with_pricing AS (\n",
        "    SELECT \n",
        "        h1.*,\n",
        "        wh.Total_Warehouse_Period_DBUs, \n",
        "        wh.Total_Warehouse_Period_Dollars\n",
        "    FROM history AS h1\n",
        "    LEFT JOIN filtered_warehouse_usage AS wh \n",
        "        ON h1.warehouse_id = wh.warehouse_id\n",
        "),\n",
        "\n",
        "query_proportion_agg AS (\n",
        "    SELECT \n",
        "        SHA2(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(statement_text, '/\\\\*.*?\\\\*/', ''), '(--[^\\\\n]*)', ''), ' ', ''), 256) AS query_signature,\n",
        "        workspace_id, \n",
        "        warehouse_id,\n",
        "        MAX(statement_text) AS statement_text,\n",
        "        MAX(statement_type) AS statetment_type,\n",
        "        MIN(start_time) AS FirstRunInPeriod,\n",
        "        MAX(start_time) AS LatestRunInPeriod,\n",
        "        MAX(raw_tagged) AS raw_tagged,\n",
        "        MAX(dbt_app) AS dbt_app,\n",
        "        MAX(dbt_node_id) AS dbt_node_id,\n",
        "        MAX(dbt_profile_name) AS dbt_profile_id,\n",
        "        MAX(dbt_target_name) AS dbt_target_name,\n",
        "        MAX(dbt_version) AS dbt_version,\n",
        "        MAX(IsDBTQuery) AS IsDBTQuery,\n",
        "        FIRST(parsed_dbt_comment) AS parsed_dbt_comment,\n",
        "        COUNT(statement_id) AS NumberOfExecutions,\n",
        "        AVG(QueryRuntimeSeconds) AS AvgRuntimeInSeconds,\n",
        "        MAX(TotalUsedTimeInWarehouse) AS TotalWarehouseTimeUsed,\n",
        "        MAX(Total_Warehouse_Period_DBUs) AS Total_Warehouse_Period_DBUs,\n",
        "        MAX(Total_Warehouse_Period_Dollars) AS Total_Warehouse_Period_Dollars,\n",
        "        SUM(TotalResourceTimeUsedForAllocation) AS TotalStatementTimeUsed,\n",
        "        ARRAY_DISTINCT(COLLECT_LIST(NAMED_STRUCT('user', executed_by, 'execution_count', \n",
        "            (SELECT COUNT(statement_id) FROM history AS in_hist \n",
        "             WHERE in_hist.executed_by = u.executed_by AND in_hist.statement_text = u.statement_text)\n",
        "        ))) AS UserRunCounts\n",
        "    FROM history_with_pricing AS u\n",
        "    GROUP BY query_signature, workspace_id, warehouse_id\n",
        "),\n",
        "\n",
        "statement_attribution AS (\n",
        "    SELECT \n",
        "        a.*,\n",
        "        CASE \n",
        "            WHEN TotalWarehouseTimeUsed = 0 THEN NULL \n",
        "            ELSE TotalStatementTimeUsed / TotalWarehouseTimeUsed \n",
        "        END AS StatementTaskTimeProportion,\n",
        "        -- Add Idle here\n",
        "        Total_Warehouse_Period_Dollars * StatementTaskTimeProportion AS StatementAllocatedDollars,\n",
        "        Total_Warehouse_Period_DBUs * StatementTaskTimeProportion AS StatementAllocatedDBUs\n",
        "    FROM query_proportion_agg a\n",
        "),\n",
        "\n",
        "statement_rollup_cumulative_sum AS (\n",
        "    SELECT \n",
        "        *,\n",
        "        SUM(StatementTaskTimeProportion) OVER (ORDER BY StatementTaskTimeProportion DESC) AS CumulativeProportionOfWarehouseTime\n",
        "    FROM statement_attribution\n",
        "),\n",
        "\n",
        "ranked_query_costs AS (\n",
        "    SELECT \n",
        "        s.*,\n",
        "        StatementTaskTimeProportion * 100 AS StatementWarehouseTimePercentage,\n",
        "        ROW_NUMBER() OVER (PARTITION BY workspace_id, warehouse_id ORDER BY StatementTaskTimeProportion DESC) AS QueryCostRank,\n",
        "        CASE \n",
        "            WHEN LENGTH(raw_tagged) >= 1 THEN raw_tagged \n",
        "            ELSE 'Untagged' \n",
        "        END AS QueryTag,\n",
        "        s.statement_text AS QueryProportionParetoFlag\n",
        "    FROM statement_rollup_cumulative_sum s\n",
        "    WHERE StatementAllocatedDollars > 0 -- Not 0 like queries with no work\n",
        "    ORDER BY CumulativeProportionOfWarehouseTime\n",
        ")\n",
        "\n",
        "SELECT \n",
        "    *,\n",
        "    CASE \n",
        "        WHEN QueryCostRank <= :top_n \n",
        "        THEN 'Top N Query' \n",
        "        ELSE 'Remaining Queries' \n",
        "    END AS TopNFilter\n",
        "FROM ranked_query_costs\n",
        "ORDER BY QueryCostRank\n",
        "LIMIT 20"
      ],
      "parameters": [
        {
          "displayName": "start_time",
          "keyword": "start_time",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [
                {
                  "value": "now-30d/d"
                }
              ]
            }
          }
        },
        {
          "displayName": "end_time",
          "keyword": "end_time",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [
                {
                  "value": "now/s"
                }
              ]
            }
          }
        },
        {
          "displayName": "dbsql_discount",
          "keyword": "dbsql_discount",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [
                {
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "displayName": "top_n",
          "keyword": "top_n",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [
                {
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "69e85848",
      "displayName": "APC Cluster Costs",
      "queryLines": [
        "SELECT\n",
        "  usage_metadata.cluster_id AS cluster_id,\n",
        "  identity_metadata.created_by AS created_by,\n",
        "  u.sku_name,\n",
        "  SUM(u.usage_quantity * lp.pricing.default) AS total_cost,\n",
        "  c.cluster_name,\n",
        "  c.owned_by\n",
        "FROM\n",
        "  system.billing.usage u\n",
        "  INNER JOIN system.billing.list_prices lp ON u.cloud = lp.cloud\n",
        "  AND u.sku_name = lp.sku_name\n",
        "  AND u.usage_start_time >= lp.price_start_time\n",
        "  AND (u.usage_end_time <= lp.price_end_time OR lp.price_end_time IS NULL)\n",
        "JOIN system.compute.clusters c ON usage_metadata.cluster_id = c.cluster_id\n",
        "WHERE\n",
        "  u.usage_metadata.cluster_id IS NOT NULL\n",
        "  AND u.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "  AND u.sku_name LIKE \"%ALL_PURPOSE%\"\n",
        "GROUP BY\n",
        "  usage_metadata.cluster_id,\n",
        "  identity_metadata.created_by,\n",
        "  u.sku_name,\n",
        "  c.cluster_name,\n",
        "  c.owned_by\n",
        "ORDER BY\n",
        "  total_cost DESC\n",
        "LIMIT 20"
      ]
    },
    {
      "name": "e3af52fd",
      "displayName": "DLT Cluster Costs",
      "queryLines": [
        "SELECT\n",
        "  usage_metadata.cluster_id AS cluster_id,\n",
        "  identity_metadata.created_by AS created_by,\n",
        "  u.sku_name,\n",
        "  SUM(u.usage_quantity * lp.pricing.default) AS total_cost\n",
        "FROM\n",
        "  system.billing.usage u\n",
        "  INNER JOIN system.billing.list_prices lp ON u.cloud = lp.cloud\n",
        "  AND u.sku_name = lp.sku_name\n",
        "  AND u.usage_start_time >= lp.price_start_time\n",
        "  AND (u.usage_end_time <= lp.price_end_time OR lp.price_end_time IS NULL)\n",
        "WHERE\n",
        "  u.usage_metadata.cluster_id IS NOT NULL\n",
        "  AND u.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "  AND u.sku_name LIKE \"%DLT%\"\n",
        "GROUP BY\n",
        "  usage_metadata.cluster_id,\n",
        "  identity_metadata.created_by,\n",
        "  u.sku_name\n",
        "ORDER BY\n",
        "  total_cost DESC\n",
        "LIMIT 20"
      ]
    },
    {
      "name": "802e675c",
      "displayName": "Job Cost Trend",
      "queryLines": [
        "with job_run_timeline_with_cost as (\n",
        "  SELECT\n",
        "    t1.*,\n",
        "    t1.usage_metadata.job_id as job_id,\n",
        "    t1.identity_metadata.run_as as run_as,\n",
        "    t1.usage_quantity * list_prices.pricing.default AS list_cost\n",
        "  FROM system.billing.usage t1\n",
        "    INNER JOIN system.billing.list_prices list_prices\n",
        "      ON\n",
        "        t1.cloud = list_prices.cloud AND\n",
        "        t1.sku_name = list_prices.sku_name AND\n",
        "        t1.usage_start_time >= list_prices.price_start_time AND\n",
        "        (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is NULL)\n",
        "  WHERE\n",
        "    t1.billing_origin_product = 'JOBS' AND\n",
        "    t1.usage_date >= CURRENT_DATE() - INTERVAL 14 DAY\n",
        "),\n",
        "most_recent_jobs as (\n",
        "  SELECT\n",
        "    *,\n",
        "    ROW_NUMBER() OVER(PARTITION BY workspace_id, job_id ORDER BY change_time DESC) as rn\n",
        "  FROM\n",
        "    system.lakeflow.jobs QUALIFY rn=1\n",
        ")\n",
        "SELECT\n",
        "    t2.name\n",
        "    ,t1.workspace_id\n",
        "    ,t1.job_id\n",
        "    ,t1.sku_name\n",
        "    ,t1.run_as\n",
        "    ,Last7DaySpend\n",
        "    ,Last14DaySpend\n",
        "    ,last7DaySpend - last14DaySpend as Last7DayGrowth\n",
        "    ,try_divide( (last7DaySpend - last14DaySpend) , last14DaySpend) * 100 AS Last7DayGrowthPct\n",
        "FROM\n",
        "  (\n",
        "    SELECT\n",
        "      workspace_id,\n",
        "      job_id,\n",
        "      run_as,\n",
        "      sku_name,\n",
        "      SUM(list_cost) AS spend\n",
        "      ,SUM(CASE WHEN usage_end_time BETWEEN date_add(current_date(), -8) AND date_add(current_date(), -1) THEN list_cost ELSE 0 END) AS Last7DaySpend\n",
        "      ,SUM(CASE WHEN usage_end_time BETWEEN date_add(current_date(), -15) AND date_add(current_date(), -8) THEN list_cost ELSE 0 END) AS Last14DaySpend\n",
        "    FROM job_run_timeline_with_cost\n",
        "    GROUP BY ALL\n",
        "  ) t1\n",
        "  LEFT JOIN most_recent_jobs t2 USING (workspace_id, job_id)\n",
        "ORDER BY\n",
        "  Last7DayGrowth DESC\n",
        "LIMIT 20"
      ]
    },
    {
      "name": "6db6eaf2",
      "displayName": "APC Utilization",
      "queryLines": [
        "SELECT\n",
        "  nt.cluster_id,\n",
        "  bu.usage_start_time,\n",
        "  nt.cpu_user_percent,\n",
        "  nt.cpu_system_percent,\n",
        "  nt.mem_used_percent,\n",
        "  nt.mem_swap_percent,\n",
        "  bu.sku_name,\n",
        "  SUM(bu.usage_quantity * lp.pricing.default) AS total_cost,\n",
        "  cc.cluster_name,\n",
        "  cc.owned_by\n",
        "FROM\n",
        "  system.compute.node_timeline nt\n",
        "JOIN\n",
        "  system.compute.clusters cc\n",
        "ON\n",
        "  nt.cluster_id = cc.cluster_id\n",
        "AND\n",
        "  nt.workspace_id = cc.workspace_id\n",
        "JOIN\n",
        "  system.billing.usage bu\n",
        "ON \n",
        "  nt.cluster_id = bu.usage_metadata.cluster_id\n",
        "AND\n",
        "  nt.workspace_id = bu.workspace_id\n",
        "JOIN\n",
        "  system.billing.list_prices lp\n",
        "ON\n",
        "  bu.cloud = lp.cloud\n",
        "AND\n",
        "  bu.sku_name = lp.sku_name\n",
        "AND\n",
        "  bu.usage_start_time >= lp.price_start_time\n",
        "AND\n",
        "  (bu.usage_end_time <= lp.price_end_time OR lp.price_end_time IS NULL)\n",
        "WHERE\n",
        "  bu.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "  AND bu.sku_name LIKE \"%ALL_PURPOSE_COMPUTE%\"\n",
        "GROUP BY\n",
        "  nt.cluster_id,\n",
        "  bu.usage_start_time,\n",
        "  nt.cpu_user_percent,\n",
        "  nt.cpu_system_percent,\n",
        "  nt.mem_used_percent,\n",
        "  nt.mem_swap_percent,\n",
        "  bu.sku_name,\n",
        "  cc.cluster_name,\n",
        "  cc.owned_by\n",
        "LIMIT 20"
      ]
    },
    {
      "name": "c038a30e",
      "displayName": "Cluster Cost and Owners",
      "queryLines": [
        "SELECT\n",
        "  c.owned_by,\n",
        "  SUM(u.usage_quantity) AS total_cost\n",
        "FROM\n",
        "  system.billing.usage u\n",
        "  JOIN system.compute.clusters c\n",
        "ON\n",
        "  u.usage_metadata.cluster_id = c.cluster_id\n",
        "WHERE\n",
        "  u.usage_start_time >= current_date() - interval 30 days\n",
        "GROUP BY\n",
        "  c.owned_by\n",
        "ORDER BY\n",
        "  total_cost DESC\n",
        "LIMIT 20"
      ]
    },
    {
      "name": "35b4f817",
      "displayName": "Warehouse Costs 30 days",
      "queryLines": [
        "SELECT\n",
        "  w.warehouse_id,\n",
        "  w.workspace_id,\n",
        "  w.warehouse_name,\n",
        "  w.warehouse_type,\n",
        "  w.warehouse_size,\n",
        "  w.min_clusters,\n",
        "  w.max_clusters,\n",
        "  SUM(bu.usage_quantity) AS total_usage_quantity,\n",
        "  SUM(bu.usage_quantity * lp.pricing.default) AS total_cost\n",
        "FROM\n",
        "  system.compute.warehouses w\n",
        "JOIN\n",
        "  system.billing.usage bu \n",
        "ON  \n",
        "  w.warehouse_id = bu.usage_metadata.warehouse_id\n",
        "JOIN\n",
        "  system.billing.list_prices lp\n",
        "ON\n",
        "  bu.cloud = lp.cloud\n",
        "AND\n",
        "  bu.sku_name = lp.sku_name\n",
        "AND\n",
        "  bu.usage_start_time >= lp.price_start_time\n",
        "AND\n",
        "  (bu.usage_end_time <= lp.price_end_time OR lp.price_end_time IS NULL)\n",
        "WHERE\n",
        "  bu.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\n",
        "GROUP BY\n",
        "  w.warehouse_id,\n",
        "  w.workspace_id,\n",
        "  w.warehouse_name,\n",
        "  w.warehouse_type,\n",
        "  w.warehouse_size,\n",
        "  w.min_clusters,\n",
        "  w.max_clusters"
      ]
    },
    {
      "name": "014be8d2",
      "displayName": "Query Cost Estimator",
      "queryLines": [
        "WITH usage_aggregates AS (\n",
        "    SELECT\n",
        "        bu.usage_metadata.warehouse_id,\n",
        "        bu.usage_start_time AS wh_start_time,\n",
        "        bu.usage_end_time AS wh_end_time,\n",
        "        DATEDIFF(MILLISECOND, bu.usage_start_time, bu.usage_end_time) AS wh_duration_ms,\n",
        "        bu.usage_quantity AS wh_usage_quantity,\n",
        "        bu.sku_name AS sku_name\n",
        "    FROM\n",
        "        system.billing.usage bu\n",
        "    WHERE\n",
        "        bu.usage_start_time >= current_date() - INTERVAL 30 DAY\n",
        "        AND bu.usage_metadata.warehouse_id IS NOT NULL\n",
        "    GROUP BY\n",
        "        bu.usage_metadata.warehouse_id,\n",
        "        wh_start_time,\n",
        "        wh_end_time,\n",
        "        wh_usage_quantity,\n",
        "        sku_name\n",
        "),\n",
        "query_count AS (\n",
        "    SELECT\n",
        "        statement_text,\n",
        "        compute.warehouse_id AS warehouse_id,\n",
        "        COUNT(*) AS count\n",
        "    FROM\n",
        "        system.query.history qh\n",
        "    WHERE\n",
        "        qh.start_time > CURRENT_TIMESTAMP() - INTERVAL 30 DAY\n",
        "    GROUP BY  \n",
        "        statement_text,\n",
        "        warehouse_id\n",
        ")\n",
        "SELECT\n",
        "   qh.statement_id,\n",
        "   qh.statement_text,\n",
        "    qc.count AS monthly_count,\n",
        "    any_value(qh.compute) AS compute,\n",
        "    qh.executed_by_user_id,\n",
        "    qh.total_duration_ms AS query_duration_ms,\n",
        "    qh.start_time AS query_start_time,\n",
        "    qh.end_time AS query_end_time,\n",
        "    qh.compute.warehouse_id,\n",
        "    cw.warehouse_size,\n",
        "    cw.warehouse_name,\n",
        "    ua.sku_name,\n",
        "    lp.pricing.default AS pricing_default,\n",
        "    any_value(ua.wh_start_time) AS wh_start_time,\n",
        "    any_value(ua.wh_end_time) AS wh_end_time,\n",
        "    ua.wh_duration_ms,\n",
        "    ua.wh_usage_quantity,\n",
        "    try_divide(ua.wh_usage_quantity, ua.wh_duration_ms) AS usage_dbu_per_ms,\n",
        "    SUM(qh.total_duration_ms * try_divide(ua.wh_usage_quantity, ua.wh_duration_ms) * lp.pricing.default) AS estimated_query_cost,\n",
        "    SUM(qc.count * qh.total_duration_ms * try_divide(ua.wh_usage_quantity, ua.wh_duration_ms) * lp.pricing.default) AS estimated_30day_query_cost\n",
        "FROM \n",
        "    system.query.history qh\n",
        "JOIN    \n",
        "    system.compute.warehouses cw\n",
        "ON\n",
        "    qh.compute.warehouse_id = cw.warehouse_id\n",
        "JOIN\n",
        "    usage_aggregates ua\n",
        "ON\n",
        "    qh.compute.warehouse_id = ua.warehouse_id\n",
        "AND\n",
        "    ua.wh_start_time <= qh.start_time\n",
        "AND\n",
        "    ua.wh_end_time >= qh.end_time\n",
        "JOIN\n",
        "    system.billing.list_prices lp\n",
        "ON\n",
        "    ua.sku_name = lp.sku_name\n",
        "JOIN\n",
        "    query_count qc\n",
        "ON\n",
        "    qh.statement_text = qc.statement_text\n",
        "AND\n",
        "    qh.compute.warehouse_id = qc.warehouse_id\n",
        "WHERE\n",
        "    qh.start_time >= current_date() - INTERVAL 30 DAY\n",
        "GROUP BY\n",
        "    qh.statement_id,\n",
        "    qh.statement_text,\n",
        "    qc.count,\n",
        "    qh.compute.warehouse_id,\n",
        "    qh.executed_by_user_id,\n",
        "    qh.total_duration_ms,\n",
        "    qh.start_time,\n",
        "    qh.end_time,\n",
        "    cw.warehouse_size,\n",
        "    cw.warehouse_name,\n",
        "    ua.sku_name,\n",
        "    lp.pricing.default,\n",
        "    ua.wh_duration_ms,\n",
        "    ua.wh_usage_quantity\n",
        "ORDER BY\n",
        "    estimated_30day_query_cost DESC\n",
        "LIMIT 20"
      ]
    }
  ],
  "pages": [
    {
      "name": "4d7ebc92",
      "displayName": "Overview",
      "layout": [
        {
          "widget": {
            "name": "1dbb8fa2",
            "multilineTextboxSpec": {
              "lines": [
                "# Databricks System Table Insights "
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 0,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "8729eb9f",
            "multilineTextboxSpec": {
              "lines": [
                "## Overview\n",
                "\n",
                "This dashboard provides a collection of queries designed to offer insights into your Databricks workspace. It covers key areas such as general usage, performance metrics, cost optimization, and data/workflow management. By using these queries, users can gain a deeper understanding of how their Databricks environment is performing, identify potential issues, and optimize for both efficiency and security.\n",
                "\n",
                "---\n",
                "\n",
                "## Prerequisites\n",
                "\n",
                "To use this dashboard, system tables must be enabled. For instructions on how to enable them, please refer to the official documentation: [Enable System Tables](https://docs.databricks.com/en/admin/system-tables/index.html#enable-system-table-schemas).  <br>Additionally, you will need `SELECT` privileges on the following schemas:\n",
                "\n",
                "- `system.access`\n",
                "- `system.billing`\n",
                "- `system.compute`\n",
                "- `system.lakeview`\n",
                "- `system.query`\n",
                "\n",
                "---\n",
                "\n",
                "## Additional Information\n",
                "\n",
                "- [Databricks SQL Warehouse Advisor](https://medium.com/dbsql-sme-engineering/the-new-databricks-sql-warehouse-advisor-dashboard-a89771bbee3e)  <br>    A valuable tool for those seeking in-depth insights into their DBSQL Warehouse.\n",
                "- [Account Usage](https://docs.databricks.com/en/admin/account-settings/usage.html)  <br>    Displays usage data by product, SKU, and custom tags.\n",
                "- [Job Monitoring](https://docs.databricks.com/en/admin/system-tables/jobs-cost.html)  <br>    Provides detailed monitoring of your Databricks jobs and their operational health.\n",
                "- [Consumption Forecast, Model Serving Costs, Unity Catalog and Volume Analysis, and Warehouse Cost Attribution](https://www.databricks.com/resources/demos/tutorials/governance/system-tables)  <br>    Offers detailed insights into various aspects of resource consumption and cost allocation.\n",
                "- [Security Analysis Tool (SAT)](https://github.com/databricks-industry-solutions/security-analysis-tool)  <br>    Provides recommendations to ensure your Databricks environment aligns with security best practices."
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 1,
            "width": 6,
            "height": 12
          }
        }
      ],
      "pageType": "PAGE_TYPE_CANVAS"
    },
    {
      "name": "2f9ca9a8",
      "displayName": "General Usage",
      "layout": [
        {
          "widget": {
            "name": "65d1fb35",
            "multilineTextboxSpec": {
              "lines": [
                "# How many clusters do I have in this workspace? How are they configured?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 2,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "81bc13e3",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "e4f42c2a",
                  "fields": [
                    {
                      "name": "active_clusters",
                      "expression": "`active_clusters`"
                    },
                    {
                      "name": "cluster_source",
                      "expression": "`cluster_source`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "active_clusters",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Count of Clusters"
                },
                "y": {
                  "fieldName": "cluster_source",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "Cluster Source"
                }
              },
              "frame": {
                "title": "Distribution of Active Clusters by Source",
                "showTitle": true
              }
            }
          },
          "position": {
            "x": 0,
            "y": 3,
            "width": 3,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "7746f930",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "e5e51159",
                  "fields": [
                    {
                      "name": "active_clusters",
                      "expression": "`active_clusters`"
                    },
                    {
                      "name": "availability",
                      "expression": "`availability`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "active_clusters",
                  "scale": {
                    "type": "quantitative"
                  },
                  "axis": {
                    "hideLabels": false
                  },
                  "displayName": "Count of Clusters"
                },
                "y": {
                  "fieldName": "availability",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "axis": {
                    "hideLabels": false
                  },
                  "displayName": "Availability"
                },
                "label": {
                  "show": false
                }
              },
              "frame": {
                "title": "Distribution of Clusters by Availability",
                "showTitle": true
              }
            }
          },
          "position": {
            "x": 3,
            "y": 3,
            "width": 3,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "1486dcf6",
            "multilineTextboxSpec": {
              "lines": [
                "# Who are my most active users?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 9,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "2d0928e3",
            "multilineTextboxSpec": {
              "lines": [
                "# How \"sticky\" is my workspace?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 25,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "4b8809f3",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "f38fd30d",
                  "fields": [
                    {
                      "name": "query_count",
                      "expression": "`query_count`"
                    },
                    {
                      "name": "user",
                      "expression": "`user`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "query_count",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Count of Queries"
                },
                "y": {
                  "fieldName": "user",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "Executed By"
                }
              },
              "frame": {
                "title": "Top 10 Most Active Users by SQL Query Count",
                "showTitle": true,
                "showDescription": true,
                "description": "Find out who is driving the most SQL warehouse costs"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 10,
            "width": 6,
            "height": 9
          }
        },
        {
          "widget": {
            "name": "c132dbef",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "68bc7ee0",
                  "fields": [
                    {
                      "name": "usage_month",
                      "expression": "`usage_month`"
                    },
                    {
                      "name": "total_users",
                      "expression": "`total_users`"
                    },
                    {
                      "name": "avg_dau",
                      "expression": "`avg_dau`"
                    },
                    {
                      "name": "mau",
                      "expression": "`mau`"
                    },
                    {
                      "name": "stickiness",
                      "expression": "`stickiness`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "line",
              "encodings": {
                "x": {
                  "fieldName": "usage_month",
                  "scale": {
                    "type": "temporal"
                  },
                  "axis": {
                    "hideTitle": true
                  },
                  "displayName": "usage_month"
                },
                "y": {
                  "primary": {
                    "fields": [
                      {
                        "fieldName": "total_users",
                        "displayName": "Total Users"
                      },
                      {
                        "fieldName": "avg_dau",
                        "displayName": "Avg Daily Active Users"
                      },
                      {
                        "fieldName": "mau",
                        "displayName": "Monthly Active Users"
                      }
                    ],
                    "scale": {
                      "type": "quantitative",
                      "domain": {
                        "min": 0
                      }
                    },
                    "axis": {
                      "hideTitle": false,
                      "title": "Users"
                    }
                  },
                  "secondary": {
                    "fields": [
                      {
                        "fieldName": "stickiness",
                        "displayName": "Stickiness"
                      }
                    ],
                    "scale": {
                      "type": "quantitative"
                    }
                  }
                },
                "label": {
                  "show": false
                }
              },
              "frame": {
                "title": "Warehouse Stickiness over Time\n\nFind out how well your organization has adopted Databricks.\nA higher score indicates that users return to Databricks and engage more",
                "showTitle": true
              }
            }
          },
          "position": {
            "x": 0,
            "y": 26,
            "width": 6,
            "height": 9
          }
        },
        {
          "widget": {
            "name": "78f434b4",
            "multilineTextboxSpec": {
              "lines": [
                "# Databricks Health Check\n",
                "\n",
                "## "
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 0,
            "width": 6,
            "height": 2
          }
        },
        {
          "widget": {
            "name": "04007a9f",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "c038a30e",
                  "fields": [
                    {
                      "name": "sum(total_cost)",
                      "expression": "SUM(`total_cost`)"
                    },
                    {
                      "name": "owned_by",
                      "expression": "`owned_by`"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(total_cost)",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Sum of total_cost"
                },
                "y": {
                  "fieldName": "owned_by",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "owned_by"
                }
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "description": "Find out who is creating and using the most clusters (Jobs, APC) ",
                "title": "Most expensive cluster owners"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 19,
            "width": 6,
            "height": 6
          }
        }
      ],
      "pageType": "PAGE_TYPE_CANVAS"
    },
    {
      "name": "e033acfe",
      "displayName": "Cost Optimization",
      "layout": [
        {
          "widget": {
            "name": "ce5f2c37",
            "multilineTextboxSpec": {
              "lines": [
                "# What are the high level costs associated with my Databricks workspace?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 2,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "eb3c0887",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "72a46672",
                  "fields": [
                    {
                      "name": "total_cost",
                      "expression": "`total_cost`"
                    },
                    {
                      "name": "sku_name",
                      "expression": "`sku_name`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "total_cost",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Total Cost USD (List Prices)"
                },
                "y": {
                  "fieldName": "sku_name",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "SKU"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Total Compute Costs by SKU over the past 30 days"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 3,
            "width": 3,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "b8d7825b",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "7e098825",
                  "fields": [
                    {
                      "name": "total_cost",
                      "expression": "`total_cost`"
                    },
                    {
                      "name": "billing_origin_product",
                      "expression": "`billing_origin_product`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "total_cost",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Total Cost USD (List Prices)"
                },
                "y": {
                  "fieldName": "billing_origin_product",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "Product"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Total Costs by Product over the past 30 days\n"
              }
            }
          },
          "position": {
            "x": 3,
            "y": 3,
            "width": 3,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "7bbaa250",
            "multilineTextboxSpec": {
              "lines": [
                "# Which jobs should I consider tuning?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 9,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "c7e01933",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "d6266ff6",
                  "fields": [
                    {
                      "name": "name",
                      "expression": "`name`"
                    },
                    {
                      "name": "percentile(Avg CPU Utilization, percentage=0_5)",
                      "expression": "PERCENTILE(`Avg CPU Utilization`, 0.5)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "name",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "y-reversed"
                    }
                  },
                  "axis": {
                    "hideLabels": true
                  },
                  "displayName": "Job Name"
                },
                "y": {
                  "fieldName": "percentile(Avg CPU Utilization, percentage=0_5)",
                  "scale": {
                    "type": "quantitative"
                  },
                  "axis": {
                    "hideLabels": false
                  },
                  "displayName": "Avg CPU Utilization %"
                },
                "color": {
                  "fieldName": "name",
                  "scale": {
                    "type": "categorical"
                  },
                  "displayName": "name"
                },
                "label": {
                  "show": false
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Top 10 Jobs with Lowest Avg CPU Utilization",
                "showDescription": true,
                "description": "These jobs are not close to fully leveraging the hardware potential - consider reducing cores or removing single-threaded code/ manual repartitions."
              }
            }
          },
          "position": {
            "x": 0,
            "y": 10,
            "width": 3,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "88e4f2b4",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "9abef65c",
                  "fields": [
                    {
                      "name": "name",
                      "expression": "`name`"
                    },
                    {
                      "name": "percentile(Avg Memory Utilization, percentage=0_5)",
                      "expression": "PERCENTILE(`Avg Memory Utilization`, 0.5)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "name",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "y-reversed"
                    }
                  },
                  "axis": {
                    "hideLabels": true
                  },
                  "displayName": "Job Name"
                },
                "y": {
                  "fieldName": "percentile(Avg Memory Utilization, percentage=0_5)",
                  "scale": {
                    "type": "quantitative"
                  },
                  "axis": {
                    "hideLabels": false
                  },
                  "displayName": "Avg Memory Utilization %"
                },
                "color": {
                  "fieldName": "name",
                  "scale": {
                    "type": "categorical"
                  },
                  "displayName": "name"
                },
                "label": {
                  "show": false
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Top 10 Jobs with Highest Avg Memory Utilization",
                "showDescription": true,
                "description": "These jobs could experience bottlenecks - consider increasing memory allocation. "
              }
            }
          },
          "position": {
            "x": 3,
            "y": 10,
            "width": 3,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "0c13597a",
            "multilineTextboxSpec": {
              "lines": [
                "#  Databricks Health Check\n",
                "\n",
                "## "
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 0,
            "width": 6,
            "height": 2
          }
        },
        {
          "widget": {
            "name": "6327e0ff",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "68c381bc",
                  "fields": [
                    {
                      "name": "list_cost",
                      "expression": "`list_cost`"
                    },
                    {
                      "name": "name",
                      "expression": "`name`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "list_cost",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Sum of Usage Dollars"
                },
                "y": {
                  "fieldName": "name",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "name"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Most expensive jobs over the past 30 days\n"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 16,
            "width": 3,
            "height": 8
          }
        },
        {
          "widget": {
            "name": "24cd9f7a",
            "multilineTextboxSpec": {
              "lines": [
                "# What are my SQL Warehouse costs?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 24,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "835ea642",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "69e85848",
                  "fields": [
                    {
                      "name": "owned_by",
                      "expression": "`owned_by`"
                    },
                    {
                      "name": "cluster_name",
                      "expression": "`cluster_name`"
                    },
                    {
                      "name": "sum(total_cost)",
                      "expression": "SUM(`total_cost`)"
                    },
                    {
                      "name": "cluster_id",
                      "expression": "`cluster_id`"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(total_cost)",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Sum of Usage Dollars"
                },
                "y": {
                  "fieldName": "cluster_id",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "cluster_id"
                },
                "extra": [
                  {
                    "fieldName": "owned_by",
                    "displayName": "owned_by"
                  },
                  {
                    "fieldName": "cluster_name",
                    "displayName": "cluster_name"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "title": "Most expensive APC clusters over the past 30 days (does not include serverless APC)"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 38,
            "width": 6,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "f803eee8",
            "multilineTextboxSpec": {
              "lines": [
                "# What are my DLT costs?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 50,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "3571a1f8",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "e3af52fd",
                  "fields": [
                    {
                      "name": "sum(total_cost)",
                      "expression": "SUM(`total_cost`)"
                    },
                    {
                      "name": "cluster_id",
                      "expression": "`cluster_id`"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(total_cost)",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Sum of Usage Dollars"
                },
                "y": {
                  "fieldName": "cluster_id",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "cluster_id"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Most expensive DLT clusters over the past 30 days (does not include sesrverless DLT)"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 51,
            "width": 6,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "d4a4ff63",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "802e675c",
                  "fields": [
                    {
                      "name": "sum(Last7DayGrowth)",
                      "expression": "SUM(`Last7DayGrowth`)"
                    },
                    {
                      "name": "name",
                      "expression": "`name`"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(Last7DayGrowth)",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Sum of Last7DayGrowth"
                },
                "y": {
                  "fieldName": "name",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "name"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Jobs with the highest growth in USD cost over the past 2 weeks",
                "showDescription": true,
                "description": "These jobs have the largest week-over-week increase in cost "
              }
            }
          },
          "position": {
            "x": 3,
            "y": 16,
            "width": 3,
            "height": 8
          }
        },
        {
          "widget": {
            "name": "472a9f05",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "6db6eaf2",
                  "fields": [
                    {
                      "name": "cluster_id",
                      "expression": "`cluster_id`"
                    },
                    {
                      "name": "cpu_system_percent",
                      "expression": "`cpu_system_percent`"
                    },
                    {
                      "name": "mem_used_percent",
                      "expression": "`mem_used_percent`"
                    },
                    {
                      "name": "total_cost",
                      "expression": "`total_cost`"
                    },
                    {
                      "name": "cluster_name",
                      "expression": "`cluster_name`"
                    },
                    {
                      "name": "owned_by",
                      "expression": "`owned_by`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 1,
              "widgetType": "table",
              "encodings": {
                "columns": [
                  {
                    "fieldName": "cluster_id",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 100000,
                    "title": "cluster_id",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "cluster_id"
                  },
                  {
                    "fieldName": "cpu_system_percent",
                    "numberFormat": "0.00",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "float",
                    "displayAs": "number",
                    "visible": true,
                    "order": 100002,
                    "title": "cpu_system_percent",
                    "allowSearch": false,
                    "alignContent": "right",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "cpu_system_percent"
                  },
                  {
                    "fieldName": "mem_used_percent",
                    "numberFormat": "0.00",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "float",
                    "displayAs": "number",
                    "visible": true,
                    "order": 100003,
                    "title": "mem_used_percent",
                    "allowSearch": false,
                    "alignContent": "right",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "mem_used_percent"
                  },
                  {
                    "fieldName": "total_cost",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "decimal",
                    "displayAs": "number",
                    "visible": true,
                    "order": 100006,
                    "title": "total_cost",
                    "allowSearch": false,
                    "alignContent": "right",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "total_cost"
                  },
                  {
                    "fieldName": "cluster_name",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 100007,
                    "title": "cluster_name",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "cluster_name"
                  },
                  {
                    "fieldName": "owned_by",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 100008,
                    "title": "owned_by",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "owned_by"
                  }
                ]
              },
              "invisibleColumns": [
                {
                  "numberFormat": "0.00",
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "cpu_user_percent",
                  "type": "float",
                  "displayAs": "number",
                  "order": 100001,
                  "title": "cpu_user_percent",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "numberFormat": "0.00",
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "mem_swap_percent",
                  "type": "float",
                  "displayAs": "number",
                  "order": 100004,
                  "title": "mem_swap_percent",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "sku_name",
                  "type": "string",
                  "displayAs": "string",
                  "order": 100005,
                  "title": "sku_name",
                  "allowSearch": false,
                  "alignContent": "left",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                }
              ],
              "allowHTMLByDefault": false,
              "itemsPerPage": 25,
              "paginationSize": "default",
              "condensed": true,
              "withRowNumber": true,
              "frame": {
                "showTitle": true,
                "title": "APC Clusters with low CPU utilization and past 30 day  costs",
                "showDescription": true,
                "description": "These jobs are not close to fully leveraging the hardware potential - consider reducing the cluster size to save costs"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 44,
            "width": 6,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "01b681ac",
            "multilineTextboxSpec": {
              "lines": [
                "# What are my APC costs?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 37,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "01dbf753",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "35b4f817",
                  "fields": [
                    {
                      "name": "sum(total_cost)",
                      "expression": "SUM(`total_cost`)"
                    },
                    {
                      "name": "warehouse_name",
                      "expression": "`warehouse_name`"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(total_cost)",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Total Cost (USD)"
                },
                "y": {
                  "fieldName": "warehouse_name",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "warehouse_name"
                }
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "Most expensive warehouses over the past 30 days",
                "description": "Target your highest cost warehouses to lower costs"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 25,
            "width": 3,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "7d183635",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "014be8d2",
                  "fields": [
                    {
                      "name": "statement_id",
                      "expression": "`statement_id`"
                    },
                    {
                      "name": "statement_text",
                      "expression": "`statement_text`"
                    },
                    {
                      "name": "monthly_count",
                      "expression": "`monthly_count`"
                    },
                    {
                      "name": "query_duration_ms",
                      "expression": "`query_duration_ms`"
                    },
                    {
                      "name": "warehouse_size",
                      "expression": "`warehouse_size`"
                    },
                    {
                      "name": "warehouse_name",
                      "expression": "`warehouse_name`"
                    },
                    {
                      "name": "estimated_query_cost",
                      "expression": "`estimated_query_cost`"
                    },
                    {
                      "name": "estimated_30day_query_cost",
                      "expression": "`estimated_30day_query_cost`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 1,
              "widgetType": "table",
              "encodings": {
                "columns": [
                  {
                    "fieldName": "statement_id",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 1,
                    "title": "statement_id",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "statement_id"
                  },
                  {
                    "fieldName": "statement_text",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 2,
                    "title": "statement_text",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "statement_text"
                  },
                  {
                    "fieldName": "monthly_count",
                    "numberFormat": "0",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "integer",
                    "displayAs": "number",
                    "visible": true,
                    "order": 3,
                    "title": "monthly_count",
                    "allowSearch": false,
                    "alignContent": "right",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "monthly_count"
                  },
                  {
                    "fieldName": "query_duration_ms",
                    "numberFormat": "0",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "integer",
                    "displayAs": "number",
                    "visible": true,
                    "order": 5,
                    "title": "query_duration_ms",
                    "allowSearch": false,
                    "alignContent": "right",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "query_duration_ms"
                  },
                  {
                    "fieldName": "warehouse_size",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 9,
                    "title": "warehouse_size",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "warehouse_size"
                  },
                  {
                    "fieldName": "warehouse_name",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 10,
                    "title": "warehouse_name",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "warehouse_name"
                  },
                  {
                    "fieldName": "estimated_query_cost",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "decimal",
                    "displayAs": "number",
                    "visible": true,
                    "order": 18,
                    "title": "estimated_query_cost",
                    "allowSearch": false,
                    "alignContent": "right",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "estimated_query_cost"
                  },
                  {
                    "fieldName": "estimated_30day_query_cost",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "decimal",
                    "displayAs": "number",
                    "visible": true,
                    "order": 19,
                    "title": "estimated_30day_query_cost",
                    "allowSearch": false,
                    "alignContent": "right",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "estimated_30day_query_cost"
                  }
                ]
              },
              "invisibleColumns": [
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "compute",
                  "type": "complex",
                  "displayAs": "json",
                  "order": 0,
                  "title": "compute",
                  "allowSearch": false,
                  "alignContent": "left",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "executed_by_user_id",
                  "type": "string",
                  "displayAs": "string",
                  "order": 4,
                  "title": "executed_by_user_id",
                  "allowSearch": false,
                  "alignContent": "left",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "dateTimeFormat": "YYYY-MM-DD HH:mm:ss.SSS",
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "query_start_time",
                  "type": "datetime",
                  "displayAs": "datetime",
                  "order": 6,
                  "title": "query_start_time",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "dateTimeFormat": "YYYY-MM-DD HH:mm:ss.SSS",
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "query_end_time",
                  "type": "datetime",
                  "displayAs": "datetime",
                  "order": 7,
                  "title": "query_end_time",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "warehouse_id",
                  "type": "string",
                  "displayAs": "string",
                  "order": 8,
                  "title": "warehouse_id",
                  "allowSearch": false,
                  "alignContent": "left",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "sku_name",
                  "type": "string",
                  "displayAs": "string",
                  "order": 11,
                  "title": "sku_name",
                  "allowSearch": false,
                  "alignContent": "left",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "pricing_default",
                  "type": "decimal",
                  "displayAs": "number",
                  "order": 12,
                  "title": "pricing_default",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "dateTimeFormat": "YYYY-MM-DD HH:mm:ss.SSS",
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "wh_start_time",
                  "type": "datetime",
                  "displayAs": "datetime",
                  "order": 13,
                  "title": "wh_start_time",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "dateTimeFormat": "YYYY-MM-DD HH:mm:ss.SSS",
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "wh_end_time",
                  "type": "datetime",
                  "displayAs": "datetime",
                  "order": 14,
                  "title": "wh_end_time",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "numberFormat": "0",
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "wh_duration_ms",
                  "type": "integer",
                  "displayAs": "number",
                  "order": 15,
                  "title": "wh_duration_ms",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "wh_usage_quantity",
                  "type": "decimal",
                  "displayAs": "number",
                  "order": 16,
                  "title": "wh_usage_quantity",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                },
                {
                  "booleanValues": [
                    "false",
                    "true"
                  ],
                  "imageUrlTemplate": "{{ @ }}",
                  "imageTitleTemplate": "{{ @ }}",
                  "imageWidth": "",
                  "imageHeight": "",
                  "linkUrlTemplate": "{{ @ }}",
                  "linkTextTemplate": "{{ @ }}",
                  "linkTitleTemplate": "{{ @ }}",
                  "linkOpenInNewTab": true,
                  "name": "usage_dbu_per_ms",
                  "type": "decimal",
                  "displayAs": "number",
                  "order": 17,
                  "title": "usage_dbu_per_ms",
                  "allowSearch": false,
                  "alignContent": "right",
                  "allowHTML": false,
                  "highlightLinks": false,
                  "useMonospaceFont": false,
                  "preserveWhitespace": false
                }
              ],
              "allowHTMLByDefault": false,
              "itemsPerPage": 25,
              "paginationSize": "default",
              "condensed": true,
              "withRowNumber": false,
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "Most Expensive Query Analyzer",
                "description": "Granular information about your most expensive queries, use it to understand and track down specific users"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 31,
            "width": 6,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "ed90914f",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "014be8d2",
                  "fields": [
                    {
                      "name": "estimated_30day_query_cost",
                      "expression": "`estimated_30day_query_cost`"
                    },
                    {
                      "name": "statement_id",
                      "expression": "`statement_id`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "estimated_30day_query_cost",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "estimated_30day_query_cost"
                },
                "y": {
                  "fieldName": "statement_id",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "statement_id"
                }
              },
              "frame": {
                "title": "Most expensive queries over the past 30 days by statement text",
                "showTitle": true,
                "showDescription": true,
                "description": "Estimated cost of each query multiplied by the number of runs over the past 30 days"
              }
            }
          },
          "position": {
            "x": 3,
            "y": 25,
            "width": 3,
            "height": 6
          }
        }
      ],
      "pageType": "PAGE_TYPE_CANVAS"
    },
    {
      "name": "3abff424",
      "displayName": "Performance Insights",
      "layout": [
        {
          "widget": {
            "name": "94477155",
            "multilineTextboxSpec": {
              "lines": [
                "# Which notebooks are consuming the most DBUs?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 2,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "63438721",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "7e79d18d",
                  "fields": [
                    {
                      "name": "total_usage",
                      "expression": "`total_usage`"
                    },
                    {
                      "name": "notebook_path",
                      "expression": "`notebook_path`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "total_usage",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Count of DBUs"
                },
                "y": {
                  "fieldName": "notebook_path",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "displayName": "Notebook"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Top 10 Notebooks by DBU Consumption"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 3,
            "width": 6,
            "height": 6
          }
        },
        {
          "widget": {
            "name": "f3e114c8",
            "multilineTextboxSpec": {
              "lines": [
                "# What are my longest running queries?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 9,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "4f43cb92",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "45200836",
                  "fields": [
                    {
                      "name": "executed_by",
                      "expression": "`executed_by`"
                    },
                    {
                      "name": "total_duration_ms",
                      "expression": "`total_duration_ms`"
                    },
                    {
                      "name": "statement_id",
                      "expression": "`statement_id`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "total_duration_ms",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Duration (ms)"
                },
                "y": {
                  "fieldName": "statement_id",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "axis": {
                    "hideTitle": false
                  },
                  "displayName": "Statement ID"
                },
                "extra": [
                  {
                    "fieldName": "executed_by",
                    "displayName": "executed_by"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "title": "Top 10 Longest Running Queries"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 10,
            "width": 6,
            "height": 9
          }
        },
        {
          "widget": {
            "name": "43e219c4",
            "multilineTextboxSpec": {
              "lines": [
                "#  Databricks Health Check\n",
                "\n",
                "## "
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 0,
            "width": 6,
            "height": 2
          }
        }
      ],
      "pageType": "PAGE_TYPE_CANVAS"
    },
    {
      "name": "8379339b",
      "displayName": "Data and Workflow Management",
      "layout": [
        {
          "widget": {
            "name": "857bb654",
            "multilineTextboxSpec": {
              "lines": [
                "# What are my most commonly used datasets?"
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 2,
            "width": 6,
            "height": 1
          }
        },
        {
          "widget": {
            "name": "9e54bf4b",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "ecc3724f",
                  "fields": [
                    {
                      "name": "distinct_jobs",
                      "expression": "`distinct_jobs`"
                    },
                    {
                      "name": "source",
                      "expression": "`source`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "distinct_jobs",
                  "scale": {
                    "type": "quantitative"
                  },
                  "displayName": "Distinct Jobs"
                },
                "y": {
                  "fieldName": "source",
                  "scale": {
                    "type": "categorical",
                    "sort": {
                      "by": "x-reversed"
                    }
                  },
                  "axis": {
                    "hideTitle": true
                  },
                  "displayName": "source"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Top 10 Data Sources by Jobs",
                "showDescription": true,
                "description": "Identify large data sources to help minimize storage costs"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 3,
            "width": 6,
            "height": 9
          }
        },
        {
          "widget": {
            "name": "2b786798",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "755e0e62",
                  "fields": [
                    {
                      "name": "target",
                      "expression": "`target`"
                    },
                    {
                      "name": "source",
                      "expression": "`source`"
                    }
                  ],
                  "disaggregated": true
                }
              }
            ],
            "spec": {
              "version": 1,
              "widgetType": "table",
              "encodings": {
                "columns": [
                  {
                    "fieldName": "target",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 100000,
                    "title": "Target",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "target"
                  },
                  {
                    "fieldName": "source",
                    "booleanValues": [
                      "false",
                      "true"
                    ],
                    "imageUrlTemplate": "{{ @ }}",
                    "imageTitleTemplate": "{{ @ }}",
                    "imageWidth": "",
                    "imageHeight": "",
                    "linkUrlTemplate": "{{ @ }}",
                    "linkTextTemplate": "{{ @ }}",
                    "linkTitleTemplate": "{{ @ }}",
                    "linkOpenInNewTab": true,
                    "type": "string",
                    "displayAs": "string",
                    "visible": true,
                    "order": 100001,
                    "title": "Source",
                    "allowSearch": false,
                    "alignContent": "left",
                    "allowHTML": false,
                    "highlightLinks": false,
                    "useMonospaceFont": false,
                    "preserveWhitespace": false,
                    "displayName": "source"
                  }
                ]
              },
              "invisibleColumns": [],
              "allowHTMLByDefault": false,
              "itemsPerPage": 10,
              "paginationSize": "default",
              "condensed": true,
              "withRowNumber": false,
              "frame": {
                "showTitle": true,
                "title": "Data Lineage - Target to Source"
              }
            }
          },
          "position": {
            "x": 0,
            "y": 12,
            "width": 6,
            "height": 8
          }
        },
        {
          "widget": {
            "name": "8550b9c0",
            "multilineTextboxSpec": {
              "lines": [
                "#  Databricks Health Check\n",
                "\n",
                "## "
              ]
            }
          },
          "position": {
            "x": 0,
            "y": 0,
            "width": 6,
            "height": 2
          }
        }
      ],
      "pageType": "PAGE_TYPE_CANVAS"
    }
  ],
  "uiSettings": {
    "theme": {
      "widgetHeaderAlignment": "ALIGNMENT_UNSPECIFIED"
    },
    "genieSpace": {
      "isEnabled": false
    }
  }
}
